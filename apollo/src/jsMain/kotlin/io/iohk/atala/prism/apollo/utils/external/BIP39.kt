// Automatically generated by dukat and then slightly adjusted manually to make it compile
@file:Suppress("ktlint", "internal:ktlint-suppression")
@file:JsModule("bip39")

package io.iohk.atala.prism.apollo.utils.external

import node.buffer.Buffer
import kotlin.js.*

/**
 * Converts a mnemonic string into a cryptographic seed.
 *
 * @param mnemonic The mnemonic string to convert.
 * @param password The optional password to use during seed conversion.
 * @return The cryptographic seed as a `Buffer` object.
 */
internal external fun mnemonicToSeedSync(mnemonic: String, password: String = definedExternally): Buffer

/**
 * Generates a cryptographic seed from a mnemonic phrase.
 *
 * @param mnemonic The mnemonic phrase to generate the seed from.
 * @param password A string used as an optional password to salt the seed generation.
 *
 * @return A Promise that resolves to a Buffer containing the generated seed.
 */
internal external fun mnemonicToSeed(mnemonic: String, password: String = definedExternally): Promise<Buffer>

/**
 * Converts a mnemonic phrase to its corresponding entropy value.
 *
 * @param mnemonic The mnemonic phrase to be converted to entropy.
 * @param wordlist The array of words from which the mnemonic phrase is constructed.
 *                Defaults to a predefined wordlist if not provided.
 * @return The entropy value corresponding to the given mnemonic phrase.
 */
internal external fun mnemonicToEntropy(mnemonic: String, wordlist: Array<String> = definedExternally): String

/**
 * Converts an entropy buffer to a mnemonic phrase.
 *
 * @param entropy The entropy buffer used to generate the mnemonic phrase.
 * @param wordlist The wordlist to use when generating the mnemonic phrase. By default, it uses the externally defined wordlist.
 * @throws Error If the entropy buffer is invalid or if the wordlist is not provided.
 * @return The converted mnemonic phrase.
 */
internal external fun entropyToMnemonic(entropy: Buffer, wordlist: Array<String> = definedExternally): String

/**
 * Converts the given [entropy] to a mnemonic phrase.
 *
 * @param entropy The entropy to be converted.
 * @return The generated mnemonic phrase.
 */
internal external fun entropyToMnemonic(entropy: Buffer): String

/**
 * Converts the given entropy to a mnemonic phrase using the specified wordlist.
 *
 * @param entropy The entropy as a string.
 * @param wordlist (Optional) The wordlist to use for generating the mnemonic. If not provided, a default wordlist will be used.
 *
 * @return The generated mnemonic phrase as a string.
 */
internal external fun entropyToMnemonic(entropy: String, wordlist: Array<String> = definedExternally): String

/**
 * Converts a given entropy string to a corresponding mnemonic string.
 *
 * @param entropy The entropy string to be converted.
 * @return The mnemonic string representing the given entropy.
 */
internal external fun entropyToMnemonic(entropy: String): String

/**
 * Generates a mnemonic phrase based on the given parameters.
 *
 * @param strength the strength of the mnemonic (optional)
 * @param rng a random number generator function (optional)
 * @param wordlist an array of words to be used in the mnemonic (optional)
 * @return the generated mnemonic phrase
 */
internal external fun generateMnemonic(strength: Number = definedExternally, rng: (size: Number) -> Buffer = definedExternally, wordlist: Array<String> = definedExternally): String

/**
 * Validates the provided mnemonic using the specified wordlist.
 *
 * @param mnemonic The mnemonic to be validated.
 * @param wordlist The wordlist to be used for validation. (optional)
 * @return `true` if the mnemonic is valid, `false` otherwise.
 */
internal external fun validateMnemonic(mnemonic: String, wordlist: Array<String> = definedExternally): Boolean

/**
 * Sets the default wordlist for the specified language.
 *
 * @param language the language for which the default wordlist is to be set.
 */
internal external fun setDefaultWordlist(language: String)

/**
 * Retrieves the default wordlist.
 *
 * @return The default wordlist as a String.
 */
internal external fun getDefaultWordlist(): String
