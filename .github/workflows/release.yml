name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3)'
        required: true
      release_swift:
        description: 'Release Swift package?'
        type: boolean
        required: false
        default: true
      release_maven:
        description: 'Release JVM & Android to Maven?'
        type: boolean
        required: false
        default: true
      release_ts:
        description: 'Release TypeScript package?'
        type: boolean
        required: false
        default: true

permissions:
  contents: write
  packages: write

jobs:
  unified_release:
    name: Unified Release (Swift/Maven/npm)
    runs-on: macos-latest
    env:
      ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.HYP_BOT_GPG_PRIVATE }}
      ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.HYP_BOT_GPG_PASSWORD }}
      ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_USERNAME }}
      ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_PASSWORD }}

    steps:
      - name: Checkout specified branch
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Install Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: zulu

      - name: Install Dependencies
        run: |
          brew install messense/macos-cross-toolchains/aarch64-unknown-linux-gnu
          brew install autoconf automake x86_64-unknown-linux-gnu

      - name: Install Rust Targets
        run: |
          rustup target add armv7-linux-androideabi \
            i686-linux-android \
            aarch64-linux-android \
            x86_64-linux-android \
            aarch64-apple-darwin \
            x86_64-apple-darwin \
            aarch64-unknown-linux-gnu \
            x86_64-unknown-linux-gnu

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Install wasm-pack
        run: cargo install wasm-pack

      - name: Setup node
        if: ${{ inputs.release_ts }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Update gradle.properties with new version
        run: |
          sed -i '' 's/^version = *.*.*/version = ${{ github.event.inputs.version }}/' gradle.properties

      - name: Update yarn
        run: ./gradlew kotlinUpgradeYarnLock

      - name: Build Kotlin Multiplatform Swift Artifacts
        if: ${{ inputs.release_swift }}
        run: ./gradlew :apollo:createSwiftPackage --no-configuration-cache

      - name: Build Kotlin Multiplatform Maven Artifacts
        if: ${{ inputs.release_maven }}
        run: ./gradlew publishToMavenLocal --no-configuration-cache

      - name: Build Kotlin Multiplatform NPM Artifacts
        if: ${{ inputs.release_ts }}
        run: ./gradlew :apollo:assembleJsPackage

      - name: Prepare Swift XCFramework
        if: ${{ inputs.release_swift }}
        run: |
          cd ./apollo/build/packages/ApolloSwift
          zip -r ApolloLibrary.xcframework.zip ApolloLibrary.xcframework
          cd ${{ github.workspace }}
          checksum=$(swift package compute-checksum ./apollo/build/packages/ApolloSwift/ApolloLibrary.xcframework.zip)
          sed -i.bak \
            -e "s/checksum:.*/checksum: \"$checksum\"/" \
            -e "s|download/.*/ApolloLibrary.xcframework.zip|download/v${{ github.event.inputs.version }}/ApolloLibrary.xcframework.zip|" \
            Package.swift

      - name: Prepare CocoaPods Specification
        if: ${{ inputs.release_swift }}
        run: |
          sed -i.bak \
            -e "s|download/.*/ApolloLibrary.xcframework.zip|download/v${{ github.event.inputs.version }}/ApolloLibrary.xcframework.zip|" \
            -e "s|spec.version *= *'.*'|spec.version      = '${{ github.event.inputs.version }}'|" \
            ApolloLibrary.podspec

      - name: Publish JVM & Android to Maven Central
        if: ${{ inputs.release_maven }}
        env:
          ORG_GRADLE_PROJECT_autoRelease: true
        run: ./gradlew publishToMavenCentral --no-configuration-cache

      - name: NPM publish
        if: ${{ inputs.release_ts }}
        run: ./gradlew :apollo:publishJsPackageToNpmjsRegistry
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Commit updated files and tag the release
        uses: stefanzweifel/git-auto-commit-action@v5
        if: ${{ inputs.release_swift }}
        with:
          commit_message: |
            chore(release): v${{ github.event.inputs.version }}
          tagging_message: v${{ github.event.inputs.version }}
          file_pattern: Package.swift ApolloLibrary.podspec gradle.properties

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: ${{ inputs.release_swift }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          files: |
            ./apollo/build/packages/ApolloSwift/ApolloLibrary.xcframework.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
