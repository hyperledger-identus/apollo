---
# kics-scan ignore
name: "Release Documentation"

defaults:
  run:
    shell: bash

env:
  JAVA_VERSION: 17
  GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: "Checkout the repo"
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ env.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: "Validate Gradle Wrapper"
        uses: gradle/wrapper-validation-action@v1

      - name: "Cache gradle"
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: "${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}"
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: "Install Java ${{ env.JAVA_VERSION }}"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "zulu"

      - name: "Install Homebrew"
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

      - name: "Install autoconf, automake, libtool"
        run: |
          brew install autoconf automake libtool

      - name: "Install rust toolchain (Linux)"
        if: matrix.os-type == 'linux'
        run: sudo apt install rustc build-essential -y

      - name: "Install Mac ToolChain"
        run: |
          brew tap messense/macos-cross-toolchains

      - name: "Install Linux GNU for x86_64"
        run: |
          rm -f '/usr/local/bin/2to3'
          rm -f '/usr/local/bin/2to3-3.11'
          rm -f '/usr/local/bin/2to3-3.12'
          rm -f '/usr/local/bin/python3'
          rm -f '/usr/local/bin/python3.11'
          rm -f '/usr/local/bin/python3.12'
          rm -f '/usr/local/bin/idle3'
          rm -f '/usr/local/bin/idle3.11'
          rm -f '/usr/local/bin/idle3.12'
          rm -f '/usr/local/bin/pydoc3'
          rm -f '/usr/local/bin/pydoc3.11'
          rm -f '/usr/local/bin/pydoc3.12'
          rm -f '/usr/local/bin/python3-config'
          rm -f '/usr/local/bin/python3.11-config'
          rm -f '/usr/local/bin/python3.12-config'
          brew install --overwrite x86_64-unknown-linux-gnu

      - name: "Install Linux GNU for aarch64"
        run: |
          brew install --overwrite aarch64-unknown-linux-gnu

      - name: "Install Rust Targets"
        run: |
          rustup target add armv7-linux-androideabi
          rustup target add i686-linux-android
          rustup target add aarch64-linux-android
          rustup target add x86_64-linux-android
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin
          rustup target add aarch64-unknown-linux-gnu
          rustup target add x86_64-unknown-linux-gnu
          

      - name: "Install rust toolchain (Macos)"
        if: matrix.os-type == 'macos'
        run: brew install rustup

      - name: "Install wasm-pack"
        run: cargo install wasm-pack

      - name: "Dokka Documentation Generation"
        run: |
          ./gradlew dokkaHtml

      - name: "Push"
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: gh-pages # The branch name where you want to push the assets
          FOLDER: "apollo/build/dokka/html/" # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.IDENTUS_CI }}
          MESSAGE: "feat(docs): ({sha}) {msg}" # The commit message
