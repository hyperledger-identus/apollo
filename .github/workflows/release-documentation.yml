---
# kics-scan ignore
name: "Release Documentation"

defaults:
  run:
    shell: bash

env:
  JAVA_VERSION: 17
  ATALA_GITHUB_ACTOR: ${{ secrets.ATALA_GITHUB_ACTOR }}
  ATALA_GITHUB_TOKEN: ${{ secrets.ATALA_GITHUB_TOKEN }}

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: "Checkout the repo"
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.ATALA_GITHUB_TOKEN }}
          fetch-depth: 0

      - name: "Validate Gradle Wrapper"
        uses: gradle/wrapper-validation-action@v1

      - name: "Cache gradle"
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: "Install Java ${{ env.JAVA_VERSION }}"
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "zulu"

      - name: "Install Homebrew"
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

      - name: "Install autoconf, automake, libtool"
        run: |
          brew install autoconf automake libtool

      - name: "Install rust toolchain (Linux)"
        if: matrix.os-type == 'linux'
        run: sudo apt install rustc build-essential -y

      - name: "Install rust toolchain (Macos)"
        if: matrix.os-type == 'macos'
        run: brew install rustup

      - name: "Install wasm-pack"
        run: cargo install wasm-pack

      - name: "Dokka Documentation Generation"
        run: |
          ./gradlew dokkaHtml

      - name: "Push"
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: gh-pages # The branch name where you want to push the assets
          FOLDER: "apollo/build/dokka/html/" # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "feat(docs): ({sha}) {msg}" # The commit message
