name: Pull Request CI

defaults:
  run:
    shell: bash
    
concurrency:
  group: ${{ github.head_ref }}${{ github.ref }}
  cancel-in-progress: true
  
env:
  JAVA_VERSION: 11
  NODEJS_VERSION: 16.17.0
  ATALA_GITHUB_ACTOR: ${{ secrets.ATALA_GITHUB_ACTOR }}
  ATALA_GITHUB_TOKEN: ${{ secrets.ATALA_GITHUB_TOKEN }}
  
on:
  pull_request:
  push:
    tags:
      - "**"
    branches:
      - main
      
jobs:
  
  lint:
    name: Lint changes
    runs-on: ubuntu-latest
    env:
      APPLY_FIXES: all
      APPLY_FIXES_EVENT: pull_request
      APPLY_FIXES_MODE: commit
      VALIDATE_ALL_CODEBASE: ${{ github.ref_name == 'main' }}
      DISABLE: COPYPASTE,SPELL
      GITHUB_TOKEN: ${{ secrets.ATALA_GITHUB_TOKEN }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.ATALA_GITHUB_TOKEN }}
          fetch-depth: 0
      - name: Mega-Linter
        id: ml
        uses: megalinter/megalinter@v6
      - name: Archive production artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v2
        with:
          name: Mega-Linter reports
          path: |
            report
            mega-linter.log

  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            os-type: linux
          - os: macos-latest
            os-type: macos
          - os: windows-latest
            os-type: windows
      fail-fast: false
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Cache gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Install Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
          
      - name: Install NodeJS ${{ env.NODEJS_VERSION }}
        if: matrix.os-type == 'linux'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}

      - name: Test Kotlin code is properly formatted
        run: ./gradlew ktlintCheck

      - name: Build for iOS, macOS, tvOS, watchOS
        if: matrix.os-type == 'macos'
        run: |
          ./gradlew clean build iosX64Test macosX64Test tvosX64Test watchosX64Test --stacktrace
        
      - name: Build for JS, Linux, Android, JVM
        if: matrix.os-type == 'linux'
        run: |
          ./gradlew clean build check --stacktrace

      - name: Build for Windows
        if: matrix.os-type == 'windows'
        run: |
          ./gradlew clean build mingwX64Test --stacktrace
      
      - name: Upload the build report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          path: "**/build/reports/"
          name: report-${{ matrix.os-type }}
